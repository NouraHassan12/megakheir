{"version":3,"sources":["Images/Vector.svg","Images/MEGAKHEIR-Logo 1.svg","Images/Powered-by.svg","Images/Facebook.svg","Images/instagram.svg","Redux/CardList/CardActions.js","Redux/CardList/CardTypes.js","Components/CardsContainer.js","Redux/CardDetails/CardDetailsAction.js","Redux/CardDetails/CardDetailsTypes.js","Components/CardDetails.js","App.js","serviceWorker.js","Redux/CardList/CardReducer.js","Redux/CardDetails/CardDetailsReducer.js","Redux/rootReducer.js","Redux/Store.js","index.js"],"names":["module","exports","fetchCardsRequest","type","connect","state","cardssData","card","dispatch","fetchCards","axios","get","then","res","console","log","data","cards","payload","fetchCardsSuccess","catch","error","errorMsg","message","fetchCardsFailure","props","useEffect","loading","className","style","color","map","key","pkID","src","Logo","alt","height","Name","to","fetchCardDetailsRequest","cardDetailss","Details","fetchCard","cardID","cardData","fetchCardDetailsSuccess","fetchCardDetailsFailure","match","params","Data","textAlign","Description_AR","ImageUrl","width","App","User","exact","path","component","CardsContainer","CardDetails","PoweredBy","facebook","marginRight","instagram","Boolean","window","location","hostname","initialState","reducer","action","rootReducer","combineReducers","cardReducer","cardDetailsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3984a7ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.b1ddbca6.svg\";","module.exports = __webpack_public_path__ + \"static/media/MEGAKHEIR-Logo 1.0ed5f72a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Powered-by.9c26d8b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.967c61a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.12cfaa8c.svg\";","import {\r\n  FETCH_CARDS_REQUEST,\r\n  FETCH_CARDS_SUCCESS,\r\n  FETCH_CARDS_FAILURE,\r\n} from \"./CardTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCardsRequest = () => {\r\n  return {\r\n    type: FETCH_CARDS_REQUEST,\r\n  };\r\n};\r\n\r\nconst fetchCardsSuccess = (cards) => {\r\n  return {\r\n    type: FETCH_CARDS_SUCCESS,\r\n    payload: cards,\r\n  };\r\n};\r\n\r\nconst fetchCardsFailure = (error) => {\r\n  return {\r\n    type: FETCH_CARDS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchCards = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchCardsRequest);\r\n\r\n    axios\r\n      .get(\"https://megakheir.herokuapp.com/ngos\")\r\n\r\n      .then((res) => {\r\n        console.log(res.data.data, \"cardss\");\r\n        const cards = res.data.data;\r\n        dispatch(fetchCardsSuccess(cards));\r\n      })\r\n\r\n      .catch((error) => {\r\n        const errorMsg = error.message;\r\n        dispatch(fetchCardsFailure(errorMsg));\r\n      });\r\n  };\r\n};\r\n","\r\n\r\nexport const FETCH_CARDS_REQUEST = \"FETCH_CARDS_REQUEST\";\r\nexport const FETCH_CARDS_SUCCESS = \"FETCH_CARDS_SUCCESS\";\r\nexport const FETCH_CARDS_FAILURE = \"FETCH_CARDS_FAILURE\";\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCards } from \"../Redux/CardList/CardActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../src/Styling.sass\";\r\nfunction CardsContainer(props) {\r\nconst { cardssData, fetchCards } = props;\r\n\r\n  useEffect(() => {\r\n    fetchCards();\r\n  }, []);\r\n\r\n  return cardssData.loading ? (\r\n    <h2>Loading</h2>\r\n  ) : cardssData.error ? (\r\n    <h2>{cardssData.error}</h2>\r\n  ) : (\r\n    <div className=\"cardContainer\">\r\n    <div className=\"container\">\r\n      <h3  className=\"title\" style={{color:\"white\"}} >\r\n        الجمعيات الخيرية\r\n      </h3>\r\n      <div className=\"row\">\r\n        {cardssData &&\r\n          cardssData.cards &&\r\n          cardssData.cards.map((card) => (\r\n            <div className=\" content col-md-4\" key={card.pkID}>\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <img\r\n                    src={card.Logo}\r\n                    className=\" img card-img-top\"\r\n                    alt=\"...\"\r\n                    style={{ height: \"35vh\" }}\r\n                  />\r\n\r\n                  <div className=\"card-title\">\r\n                    <h5>{card.Name}</h5>\r\n                  </div>\r\n                  <div className=\"card-content\">\r\n                    <button className=\"card-btn\">\r\n                      <Link to={`/card/${card.pkID}`}>...المزيد</Link>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cardssData: state.card,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCards: () => dispatch(fetchCards()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardsContainer);\r\n","import {\r\n  FETCH_CARDS_DETAILS_REQUEST,\r\n  FETCH_CARD_DETAILS_SUCCESS,\r\n  FETCH_CARD_DETAILS_FAILURE,\r\n} from \"./CardDetailsTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCardDetailsRequest = () => {\r\n  return {\r\n    type: FETCH_CARDS_DETAILS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchCardDetailsSuccess = (cardData) => {\r\n  return {\r\n    type: FETCH_CARD_DETAILS_SUCCESS,\r\n    payload: cardData,\r\n  };\r\n};\r\n\r\nconst fetchCardDetailsFailure = (error) => {\r\n  return {\r\n    type: FETCH_CARD_DETAILS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchCard = (pkID) =>  {\r\n  return (dispatch) => {\r\n    dispatch(fetchCardDetailsRequest);\r\n\r\n  axios.get(`http://62.68.253.183:8000/ngos/${pkID}`)\r\n  .then((res=>{\r\n    console.log(res.data.data ,\"details\");\r\n    const cardData = res.data.data\r\n    dispatch(fetchCardDetailsSuccess(cardData));\r\n  }))\r\n    \r\n   .catch((error) => {\r\n    const errorMsg = error.message;\r\n    dispatch(fetchCardDetailsFailure(errorMsg));\r\n  })\r\n\r\n  }\r\n}\r\n","export const FETCH_CARDS_DETAILS_REQUEST = \"FETCH_CARDS_DETAILS_REQUEST\";\r\nexport const FETCH_CARD_DETAILS_SUCCESS = \"FETCH_CARD_DETAILS_SUCCESS\";\r\nexport const FETCH_CARD_DETAILS_FAILURE = \"FETCH_CARD_DETAILS_FAILURE\";","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCard } from \"../Redux/CardDetails/CardDetailsAction\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction CardDetails(props) {\r\n  const { cardDetailss, fetchCard } = props;\r\n  const cardID = props.match.params.pkID;\r\n\r\n  useEffect(() => {\r\n    fetchCard(cardID);\r\n  }, []);\r\n\r\n  return cardDetailss.loading ? (\r\n    <h2>Loading</h2>\r\n  ) : cardDetailss.error ? (\r\n    <h2>{cardDetailss.error}</h2>\r\n  ) : (\r\n    <div>\r\n      {cardDetailss &&\r\n        cardDetailss.cardData &&\r\n        cardDetailss.cardData.map((Data) => (\r\n          <div\r\n            className=\"card mb-2\"\r\n            key={Data.Name}\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{Data.Name}</h5>\r\n              <p className=\"card-text\">{Data.Description_AR}</p>\r\n              <img\r\n                src={Data.ImageUrl}\r\n                alt=\"img\"\r\n                style={{ width: \"50%\", height: \"50%\" }}\r\n              />\r\n\r\n              <div className=\"card-content\">\r\n                <button className=\"card-btn\">\r\n                  <Link to=\"/\">تبرع الان</Link>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cardDetailss: state.Details,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCard: (cardID) => dispatch(fetchCard(cardID)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);\r\n","import React from \"react\";\nimport \"./Styling.sass\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport CardsContainer from \"./Components/CardsContainer\";\nimport CardDetails from \"./Components/CardDetails\";\nimport User from \"./Images/Vector.svg\";\nimport Logo from \"./Images/MEGAKHEIR-Logo 1.svg\";\nimport PoweredBy from \"./Images/Powered-by.svg\";\nimport facebook from \"./Images/Facebook.svg\";\nimport instagram from \"./Images/instagram.svg\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <nav>\n        <Link to=\"/\">\n          <img src={User} alt=\"user\" />\n        </Link>\n\n        <Link to=\"/\">\n          <img src={Logo} alt=\"logo\" />\n        </Link>\n\n     \n      </nav>\n      <Switch>\n        <Route exact path=\"/\" component={CardsContainer} />\n        <Route exact path=\"/card/:pkID\" component={CardDetails} />\n      </Switch>\n      {/* <CardsContainer /> */}\n\n      <footer>\n        <Link to=\"/\">\n          <img src={PoweredBy} alt=\"PoweredBy\" />\n        </Link>\n        <div>\n          <img src={facebook} alt=\"facebook\" style={{ marginRight: \"10px\" }} />\n          <img src={instagram} alt=\"instagram\" />\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_CARDS_REQUEST,\r\n  FETCH_CARDS_SUCCESS,\r\n  FETCH_CARDS_FAILURE,\r\n} from \"./CardTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  cards: [],\r\n  error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        \r\n      };\r\n    case FETCH_CARDS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        cards: action.payload,\r\n        error: \"\",\r\n      };\r\n\r\n    case FETCH_CARDS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        cards: [],\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  FETCH_CARDS_DETAILS_REQUEST,\r\n  FETCH_CARD_DETAILS_SUCCESS,\r\n  FETCH_CARD_DETAILS_FAILURE,\r\n} from \"./CardDetailsTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  cardData: [],\r\n  error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CARDS_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n       \r\n      };\r\n\r\n      case FETCH_CARD_DETAILS_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          cardData:action.payload,\r\n          error: \"\",\r\n        };\r\n\r\n    case FETCH_CARD_DETAILS_FAILURE:\r\n      return {\r\n         loading: false,\r\n         cardData: [],\r\n        error: action.payload,\r\n      };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cardReducer from \"./CardList/CardReducer\";\r\nimport cardDetailsReducer from \"./CardDetails/CardDetailsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  card: cardReducer,\r\n  Details: cardDetailsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store= createStore(rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk)))\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from \"./Redux/Store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n     <Provider store={store}>\n        <App />\n    </Provider>\n    </BrowserRouter>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}